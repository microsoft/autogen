{
  "id": "gallery_default",
  "name": "Default Component Gallery",
  "url": null,
  "metadata": {
    "author": "AutoGen Team",
    "created_at": "2025-01-29T22:13:58.687387",
    "updated_at": "2025-01-29T22:13:58.715730",
    "version": "1.0.0",
    "description": "A default gallery containing basic components for human-in-loop conversations",
    "tags": ["human-in-loop", "assistant"],
    "license": "MIT",
    "homepage": null,
    "category": "conversation",
    "last_synced": null
  },
  "items": {
    "teams": [
      {
        "provider": "autogen_agentchat.teams.RoundRobinGroupChat",
        "component_type": "team",
        "version": 1,
        "component_version": 1,
        "description": "A team that runs a group chat with participants taking turns in a round-robin fashion\n    to publish a message to all.",
        "label": "RoundRobinGroupChat",
        "config": {
          "participants": [
            {
              "provider": "autogen_agentchat.agents.AssistantAgent",
              "component_type": "agent",
              "version": 1,
              "component_version": 1,
              "description": "An agent that provides assistance with tool use.",
              "label": "AssistantAgent",
              "config": {
                "name": "assistant_agent",
                "model_client": {
                  "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
                  "component_type": "model",
                  "version": 1,
                  "component_version": 1,
                  "description": "Chat completion client for OpenAI hosted models.",
                  "label": "OpenAIChatCompletionClient",
                  "config": {
                    "model": "gpt-4o-mini"
                  }
                },
                "tools": [
                  {
                    "provider": "autogen_core.tools.FunctionTool",
                    "component_type": "tool",
                    "version": 1,
                    "component_version": 1,
                    "description": "Create custom tools by wrapping standard Python functions.",
                    "label": "FunctionTool",
                    "config": {
                      "source_code": "def calculator(a: float, b: float, operator: str) -> str:\n    try:\n        if operator == '+':\n            return str(a + b)\n        elif operator == '-':\n            return str(a - b)\n        elif operator == '*':\n            return str(a * b)\n        elif operator == '/':\n            if b == 0:\n                return 'Error: Division by zero'\n            return str(a / b)\n        else:\n            return 'Error: Invalid operator. Please use +, -, *, or /'\n    except Exception as e:\n        return f'Error: {str(e)}'\n",
                      "name": "calculator",
                      "description": "A simple calculator that performs basic arithmetic operations",
                      "global_imports": [],
                      "has_cancellation_support": false
                    }
                  }
                ],
                "handoffs": [],
                "model_context": {
                  "provider": "autogen_core.model_context.UnboundedChatCompletionContext",
                  "component_type": "chat_completion_context",
                  "version": 1,
                  "component_version": 1,
                  "description": "An unbounded chat completion context that keeps a view of the all the messages.",
                  "label": "UnboundedChatCompletionContext",
                  "config": {}
                },
                "description": "An agent that provides assistance with ability to use tools.",
                "system_message": "You are a helpful assistant. Solve tasks carefully. When done, say TERMINATE.",
                "model_client_stream": false,
                "reflect_on_tool_use": false,
                "tool_call_summary_format": "{result}"
              }
            }
          ],
          "termination_condition": {
            "provider": "autogen_agentchat.base.OrTerminationCondition",
            "component_type": "termination",
            "version": 1,
            "component_version": 1,
            "label": "OrTerminationCondition",
            "config": {
              "conditions": [
                {
                  "provider": "autogen_agentchat.conditions.TextMentionTermination",
                  "component_type": "termination",
                  "version": 1,
                  "component_version": 1,
                  "description": "Terminate the conversation if a specific text is mentioned.",
                  "label": "TextMentionTermination",
                  "config": {
                    "text": "TERMINATE"
                  }
                },
                {
                  "provider": "autogen_agentchat.conditions.MaxMessageTermination",
                  "component_type": "termination",
                  "version": 1,
                  "component_version": 1,
                  "description": "Terminate the conversation after a maximum number of messages have been exchanged.",
                  "label": "MaxMessageTermination",
                  "config": {
                    "max_messages": 10
                  }
                }
              ]
            }
          }
        }
      },
      {
        "provider": "autogen_agentchat.teams.SelectorGroupChat",
        "component_type": "team",
        "version": 1,
        "component_version": 1,
        "description": "A group chat team that have participants takes turn to publish a message\n    to all, using a ChatCompletion model to select the next speaker after each message.",
        "label": "Web Agents (Operator)",
        "config": {
          "participants": [
            {
              "provider": "autogen_ext.agents.web_surfer.MultimodalWebSurfer",
              "component_type": "agent",
              "version": 1,
              "component_version": 1,
              "description": "MultimodalWebSurfer is a multimodal agent that acts as a web surfer that can search the web and visit web pages.",
              "label": "MultimodalWebSurfer",
              "config": {
                "name": "websurfer_agent",
                "model_client": {
                  "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
                  "component_type": "model",
                  "version": 1,
                  "component_version": 1,
                  "description": "Chat completion client for OpenAI hosted models.",
                  "label": "OpenAIChatCompletionClient",
                  "config": {
                    "model": "gpt-4o-mini"
                  }
                },
                "description": "an agent that solves tasks by browsing the web",
                "headless": true,
                "start_page": "https://www.bing.com/",
                "animate_actions": false,
                "to_save_screenshots": false,
                "use_ocr": false,
                "to_resize_viewport": true
              }
            },
            {
              "provider": "autogen_agentchat.agents.AssistantAgent",
              "component_type": "agent",
              "version": 1,
              "component_version": 1,
              "description": "An agent that provides assistance with tool use.",
              "label": "AssistantAgent",
              "config": {
                "name": "assistant_agent",
                "model_client": {
                  "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
                  "component_type": "model",
                  "version": 1,
                  "component_version": 1,
                  "description": "Chat completion client for OpenAI hosted models.",
                  "label": "OpenAIChatCompletionClient",
                  "config": {
                    "model": "gpt-4o-mini"
                  }
                },
                "tools": [],
                "handoffs": [],
                "model_context": {
                  "provider": "autogen_core.model_context.UnboundedChatCompletionContext",
                  "component_type": "chat_completion_context",
                  "version": 1,
                  "component_version": 1,
                  "description": "An unbounded chat completion context that keeps a view of the all the messages.",
                  "label": "UnboundedChatCompletionContext",
                  "config": {}
                },
                "description": "an agent that verifies and summarizes information",
                "system_message": "You are a task verification assistant who is working with a web surfer agent to solve tasks. At each point, check if the task has been completed as requested by the user. If the websurfer_agent responds and the task has not yet been completed, respond with what is left to do and then say 'keep going'. If and only when the task has been completed, summarize and present a final answer that directly addresses the user task in detail and then respond with TERMINATE.",
                "model_client_stream": false,
                "reflect_on_tool_use": false,
                "tool_call_summary_format": "{result}"
              }
            },
            {
              "provider": "autogen_agentchat.agents.UserProxyAgent",
              "component_type": "agent",
              "version": 1,
              "component_version": 1,
              "description": "An agent that can represent a human user through an input function.",
              "label": "UserProxyAgent",
              "config": {
                "name": "user_proxy",
                "description": "a human user that should be consulted only when the assistant_agent is unable to verify the information provided by the websurfer_agent"
              }
            }
          ],
          "model_client": {
            "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
            "component_type": "model",
            "version": 1,
            "component_version": 1,
            "description": "Chat completion client for OpenAI hosted models.",
            "label": "OpenAIChatCompletionClient",
            "config": {
              "model": "gpt-4o-mini"
            }
          },
          "termination_condition": {
            "provider": "autogen_agentchat.base.OrTerminationCondition",
            "component_type": "termination",
            "version": 1,
            "component_version": 1,
            "label": "OrTerminationCondition",
            "config": {
              "conditions": [
                {
                  "provider": "autogen_agentchat.conditions.MaxMessageTermination",
                  "component_type": "termination",
                  "version": 1,
                  "component_version": 1,
                  "description": "Terminate the conversation after a maximum number of messages have been exchanged.",
                  "label": "MaxMessageTermination",
                  "config": {
                    "max_messages": 20
                  }
                },
                {
                  "provider": "autogen_agentchat.conditions.TextMentionTermination",
                  "component_type": "termination",
                  "version": 1,
                  "component_version": 1,
                  "description": "Terminate the conversation if a specific text is mentioned.",
                  "label": "TextMentionTermination",
                  "config": {
                    "text": "TERMINATE"
                  }
                }
              ]
            }
          },
          "selector_prompt": "You are the cordinator of role play game. The following roles are available:\n{roles}. Given a task, the websurfer_agent will be tasked to address it by browsing the web and providing information.  The assistant_agent will be tasked with verifying the information provided by the websurfer_agent and summarizing the information to present a final answer to the user. \nIf the task  needs assistance from a human user (e.g., providing feedback, preferences, or the task is stalled), you should select the user_proxy role to provide the necessary information.\n\nRead the following conversation. Then select the next role from {participants} to play. Only return the role.\n\n{history}\n\nRead the above conversation. Then select the next role from {participants} to play. Only return the role.",
          "allow_repeated_speaker": false
        }
      }
    ],
    "components": {
      "agents": [
        {
          "provider": "autogen_agentchat.agents.AssistantAgent",
          "component_type": "agent",
          "version": 1,
          "component_version": 1,
          "description": "An agent that provides assistance with tool use.",
          "label": "AssistantAgent",
          "config": {
            "name": "assistant_agent",
            "model_client": {
              "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
              "component_type": "model",
              "version": 1,
              "component_version": 1,
              "description": "Chat completion client for OpenAI hosted models.",
              "label": "OpenAIChatCompletionClient",
              "config": {
                "model": "gpt-4o-mini"
              }
            },
            "tools": [
              {
                "provider": "autogen_core.tools.FunctionTool",
                "component_type": "tool",
                "version": 1,
                "component_version": 1,
                "description": "Create custom tools by wrapping standard Python functions.",
                "label": "FunctionTool",
                "config": {
                  "source_code": "def calculator(a: float, b: float, operator: str) -> str:\n    try:\n        if operator == '+':\n            return str(a + b)\n        elif operator == '-':\n            return str(a - b)\n        elif operator == '*':\n            return str(a * b)\n        elif operator == '/':\n            if b == 0:\n                return 'Error: Division by zero'\n            return str(a / b)\n        else:\n            return 'Error: Invalid operator. Please use +, -, *, or /'\n    except Exception as e:\n        return f'Error: {str(e)}'\n",
                  "name": "calculator",
                  "description": "A simple calculator that performs basic arithmetic operations",
                  "global_imports": [],
                  "has_cancellation_support": false
                }
              }
            ],
            "handoffs": [],
            "model_context": {
              "provider": "autogen_core.model_context.UnboundedChatCompletionContext",
              "component_type": "chat_completion_context",
              "version": 1,
              "component_version": 1,
              "description": "An unbounded chat completion context that keeps a view of the all the messages.",
              "label": "UnboundedChatCompletionContext",
              "config": {}
            },
            "description": "An agent that provides assistance with ability to use tools.",
            "system_message": "You are a helpful assistant. Solve tasks carefully. When done, say TERMINATE.",
            "model_client_stream": false,
            "reflect_on_tool_use": false,
            "tool_call_summary_format": "{result}"
          }
        },
        {
          "provider": "autogen_ext.agents.web_surfer.MultimodalWebSurfer",
          "component_type": "agent",
          "version": 1,
          "component_version": 1,
          "description": "MultimodalWebSurfer is a multimodal agent that acts as a web surfer that can search the web and visit web pages.",
          "label": "MultimodalWebSurfer",
          "config": {
            "name": "websurfer_agent",
            "model_client": {
              "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
              "component_type": "model",
              "version": 1,
              "component_version": 1,
              "description": "Chat completion client for OpenAI hosted models.",
              "label": "OpenAIChatCompletionClient",
              "config": {
                "model": "gpt-4o-mini"
              }
            },
            "description": "an agent that solves tasks by browsing the web",
            "headless": true,
            "start_page": "https://www.bing.com/",
            "animate_actions": false,
            "to_save_screenshots": false,
            "use_ocr": false,
            "to_resize_viewport": true
          }
        },
        {
          "provider": "autogen_agentchat.agents.AssistantAgent",
          "component_type": "agent",
          "version": 1,
          "component_version": 1,
          "description": "An agent that provides assistance with tool use.",
          "label": "AssistantAgent",
          "config": {
            "name": "assistant_agent",
            "model_client": {
              "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
              "component_type": "model",
              "version": 1,
              "component_version": 1,
              "description": "Chat completion client for OpenAI hosted models.",
              "label": "OpenAIChatCompletionClient",
              "config": {
                "model": "gpt-4o-mini"
              }
            },
            "tools": [],
            "handoffs": [],
            "model_context": {
              "provider": "autogen_core.model_context.UnboundedChatCompletionContext",
              "component_type": "chat_completion_context",
              "version": 1,
              "component_version": 1,
              "description": "An unbounded chat completion context that keeps a view of the all the messages.",
              "label": "UnboundedChatCompletionContext",
              "config": {}
            },
            "description": "an agent that verifies and summarizes information",
            "system_message": "You are a task verification assistant who is working with a web surfer agent to solve tasks. At each point, check if the task has been completed as requested by the user. If the websurfer_agent responds and the task has not yet been completed, respond with what is left to do and then say 'keep going'. If and only when the task has been completed, summarize and present a final answer that directly addresses the user task in detail and then respond with TERMINATE.",
            "model_client_stream": false,
            "reflect_on_tool_use": false,
            "tool_call_summary_format": "{result}"
          }
        },
        {
          "provider": "autogen_agentchat.agents.UserProxyAgent",
          "component_type": "agent",
          "version": 1,
          "component_version": 1,
          "description": "An agent that can represent a human user through an input function.",
          "label": "UserProxyAgent",
          "config": {
            "name": "user_proxy",
            "description": "a human user that should be consulted only when the assistant_agent is unable to verify the information provided by the websurfer_agent"
          }
        }
      ],
      "models": [
        {
          "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
          "component_type": "model",
          "version": 1,
          "component_version": 1,
          "description": "Chat completion client for OpenAI hosted models.",
          "label": "OpenAIChatCompletionClient",
          "config": {
            "model": "gpt-4o-mini"
          }
        },
        {
          "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
          "component_type": "model",
          "version": 1,
          "component_version": 1,
          "description": "Example on how to use the OpenAIChatCopletionClient with local models (Ollama, vllm etc).",
          "label": "Mistral-7B vllm",
          "config": {
            "model": "TheBloke/Mistral-7B-Instruct-v0.2-GGUF",
            "base_url": "http://localhost:1234/v1"
          }
        },
        {
          "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
          "component_type": "model",
          "version": 1,
          "component_version": 1,
          "description": "Chat completion client for OpenAI hosted models.",
          "label": "OpenAIChatCompletionClient",
          "config": {
            "model": "gpt-4o-mini"
          }
        }
      ],
      "tools": [
        {
          "provider": "autogen_core.tools.FunctionTool",
          "component_type": "tool",
          "version": 1,
          "component_version": 1,
          "description": "Create custom tools by wrapping standard Python functions.",
          "label": "FunctionTool",
          "config": {
            "source_code": "def calculator(a: float, b: float, operator: str) -> str:\n    try:\n        if operator == '+':\n            return str(a + b)\n        elif operator == '-':\n            return str(a - b)\n        elif operator == '*':\n            return str(a * b)\n        elif operator == '/':\n            if b == 0:\n                return 'Error: Division by zero'\n            return str(a / b)\n        else:\n            return 'Error: Invalid operator. Please use +, -, *, or /'\n    except Exception as e:\n        return f'Error: {str(e)}'\n",
            "name": "calculator",
            "description": "A simple calculator that performs basic arithmetic operations",
            "global_imports": [],
            "has_cancellation_support": false
          }
        }
      ],
      "terminations": [
        {
          "provider": "autogen_agentchat.conditions.TextMentionTermination",
          "component_type": "termination",
          "version": 1,
          "component_version": 1,
          "description": "Terminate the conversation if a specific text is mentioned.",
          "label": "TextMentionTermination",
          "config": {
            "text": "TERMINATE"
          }
        },
        {
          "provider": "autogen_agentchat.conditions.MaxMessageTermination",
          "component_type": "termination",
          "version": 1,
          "component_version": 1,
          "description": "Terminate the conversation after a maximum number of messages have been exchanged.",
          "label": "MaxMessageTermination",
          "config": {
            "max_messages": 10
          }
        },
        {
          "provider": "autogen_agentchat.base.OrTerminationCondition",
          "component_type": "termination",
          "version": 1,
          "component_version": 1,
          "description": null,
          "label": "OrTerminationCondition",
          "config": {
            "conditions": [
              {
                "provider": "autogen_agentchat.conditions.TextMentionTermination",
                "component_type": "termination",
                "version": 1,
                "component_version": 1,
                "description": "Terminate the conversation if a specific text is mentioned.",
                "label": "TextMentionTermination",
                "config": {
                  "text": "TERMINATE"
                }
              },
              {
                "provider": "autogen_agentchat.conditions.MaxMessageTermination",
                "component_type": "termination",
                "version": 1,
                "component_version": 1,
                "description": "Terminate the conversation after a maximum number of messages have been exchanged.",
                "label": "MaxMessageTermination",
                "config": {
                  "max_messages": 10
                }
              }
            ]
          }
        },
        {
          "provider": "autogen_agentchat.base.OrTerminationCondition",
          "component_type": "termination",
          "version": 1,
          "component_version": 1,
          "description": null,
          "label": "OrTerminationCondition",
          "config": {
            "conditions": [
              {
                "provider": "autogen_agentchat.conditions.MaxMessageTermination",
                "component_type": "termination",
                "version": 1,
                "component_version": 1,
                "description": "Terminate the conversation after a maximum number of messages have been exchanged.",
                "label": "MaxMessageTermination",
                "config": {
                  "max_messages": 20
                }
              },
              {
                "provider": "autogen_agentchat.conditions.TextMentionTermination",
                "component_type": "termination",
                "version": 1,
                "component_version": 1,
                "description": "Terminate the conversation if a specific text is mentioned.",
                "label": "TextMentionTermination",
                "config": {
                  "text": "TERMINATE"
                }
              }
            ]
          }
        }
      ]
    }
  }
}
